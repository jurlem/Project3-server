{"version":3,"sources":["utils/convertDataType.js","components/ReactContext.jsx","components/NewReminder.jsx","components/Calendar.jsx","utils/convertDateToString.js","utils/paginate.js","common/pagination.jsx","utils/convertDateToDateAndTime.js","components/RemindersTable.jsx","components/Reminders.jsx","components/RemindersEdit.jsx","components/ReminderTool.jsx","components/PaypalButton.jsx","components/Upgrade.jsx","components/Manage.jsx","components/Nav.jsx","components/Signup.jsx","components/Login.jsx","components/Logout.jsx","components/NotFound.jsx","components/Profile.jsx","components/ProfileEdit.jsx","components/ManageEdit.jsx","common/ProtectedRoute.jsx","common/ProtectedAdminRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["convertDataType","value","Function","e","MyContext","React","createContext","MyProvider","state","theUser","localStorage","getItem","typeOfUser","first_name","email_address","phone_number","premium","userId","selectedDay","checkUser","console","log","_this","setState","handleLogin","response","setItem","data","_id","error","handleLogout","clear","selectedDayContext","prevState","Object","objectSpread","updatePremiumState","remindersPerDay","date","context","axios","get","_templateObject","then","result","catch","err","_this2","this","react_default","a","createElement","Provider","addUserIdToState","props","children","Component","NewReminder","handleEntry","target","_e$target","name","defineProperty","handleFormSubmit","reminder","assign","preventDefault","post","history","push","Consumer","Fragment","className","JSON","stringify","onSubmit","htmlFor","type","id","placeholder","onChange","contextType","Calendar","undefined","today","Date","onDayClick","day","_ref","selected","modifier","highlighted","reminders","map","getUserLocale","Helmet_default","DayPicker_default","showOutsideDays","showWeekNumbers","todayButton","selectedDays","firstDayOfWeek","modifiers","toLocaleDateString","convertDateToString","newDate","year","getFullYear","m","getMonth","d","getUTCDate","month","slice","concat","paginate","items","pageNumber","pageSize","startIndex","_","take","Pagination","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","key","onClick","convertDateToDateAndTime","hour","getHours","minutes","getMinutes","RemindersTable","allReminders","handleDelete","remindersR","index","remindMe","text","gridRadios","index_es","icon","faTrash","react_router_dom","to","pathname","fromNotifications","faEdit","Reminders","renderReminderComponent","_this$state","filter","showReminder","components_RemindersTable","_this$state2","length","pagination","RemindersEdit","location","radioState","message","defaultValue","defaultChecked","ReminderTool","newReminders","item","src_components_Calendar","src_components_Reminders","PaypalButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showButton","window","ReactDOM","_this$props","isScriptLoaded","isScriptLoadSucceed","nextProps","paypal","PAYPAL","_this$props2","total","currency","env","commit","client","onSuccess","onError","onCancel","Button","react","payment","rest","create","transactions","amount","onAuthorize","actions","execute","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","Upgrade","scriptLoader","onUpgrade","Manage","users","handleDeleteUser","user","newUsers","_this3","nrOfUsers","Nav","Signup","password","class","style","max-width","faUser","faEnvelope","faPhone","faLock","Login","withCredentials","replace","required","autoFocus","Logout","confirmLogout","NotFound","Profile","ProfileEdit","ManageEdit","ProtectedRoute","path","component","render","objectWithoutProperties","react_router","ProtectedAdminRoute","App","_this$context$state","src_components_Nav","common_ProtectedRoute","common_ProtectedAdminRoute","exact","Boolean","hostname","match","ReactContext_MyProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c62865d.chunk.js","sourcesContent":["export function convertDataType (value) {\n  try {\n    return (new Function(\"return \" + value + \";\")())\n  } \n  catch(e){\n    return value;\n  }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {convertDataType} from '../utils/convertDataType.js';\n\n// first we will make a new context\nconst MyContext = React.createContext ();\n\n// Then create a provider Component\nclass MyProvider extends Component {\n  state = {\n    theUser: localStorage.getItem ('theUser'),\n    typeOfUser: localStorage.getItem ('typeOfUser'),\n    first_name: localStorage.getItem ('first_name'),\n    email_address: localStorage.getItem ('email_address'),\n    phone_number: localStorage.getItem ('phone_number'),\n    premium: localStorage.getItem ('premium'),\n    userId: localStorage.getItem ('userId'),\n    selectedDay: convertDataType (localStorage.getItem ('selectedDay')),\n  };\n\n  componentDidMount () {}\n\n  checkUser = () => {\n    console.log ('checking user from state');\n    console.log (this.state.theUser);\n    // 7check if there is a state in context, if not take it from Localstoragest and SetState\n    if (!this.state.theUser) {\n      this.setState ({\n        theUser: localStorage.getItem ('theUser'),\n        typeOfUser: localStorage.getItem ('typeOfUser'),\n        first_name: localStorage.getItem ('first_name'),\n        email_address: localStorage.getItem ('email_address'),\n        phone_number: localStorage.getItem ('phone_number'),\n        premium: localStorage.getItem ('premium'),\n        userId: localStorage.getItem ('userId'),\n        selectedDay: convertDataType (localStorage.getItem ('selectedDay')),\n      });\n    }\n  };\n\n  handleLogin = response => {\n    try {\n      localStorage.setItem ('theUser', response.data.first_name);\n      localStorage.setItem ('typeOfUser', response.data.typeOfUser);\n      localStorage.setItem ('first_name', response.data.first_name);\n      localStorage.setItem ('email_address', response.data.email_address);\n      localStorage.setItem ('phone_number', response.data.phone_number);\n      localStorage.setItem ('premium', response.data.premium);\n      localStorage.setItem ('userId', response.data._id);\n      localStorage.setItem ('selectedDay', response.selectedDay);\n      this.setState ({\n        theUser: response.data.first_name,\n        typeOfUser: response.data.typeOfUser,\n        first_name: response.data.first_name,\n        email_address: response.data.email_address,\n        phone_number: response.data.phone_number,\n        premium: response.data.premium,\n        userId: response.data._id,\n        selectedDay: response.data.selectedDay,\n      });\n      console.log (\n        'after handleLogin setstate logging the this.state :',\n        this.state\n      );\n    } catch (error) {\n      console.log (error);\n    }\n  };\n\n  handleLogout = () => {\n    try {\n      localStorage.clear ();\n      this.setState ({\n        theUser: null,\n        typeOfUser: '',\n        first_name: null,\n        email_address: null,\n        phone_number: null,\n        premium: null,\n        userId: null,\n        selectedDay: null,\n      });\n    } catch (error) {\n      console.log (error);\n    }\n  };\n\n  selectedDayContext = selectedDay => {\n    console.log ('console logging selectedDayContext', selectedDay);\n    this.setState (prevState => ({...prevState, selectedDay}));\n  };\n  catch (error) {\n    console.log (error);\n  }\n\n  // show updated Premium = True state in CONTEXT state:\n  updatePremiumState = () => {\n    this.setState ({premium: 'Yes'});\n  };\n\n  // shows in Reminders comp reminders per selected day\n  remindersPerDay = selectedDay => {\n    const date = selectedDay;\n    const userId = this.context.state.userId;\n\n    //selectedDay Into date format selectedDad.intoDate\n    axios.get ()`http://localhost:6001/reminders/selectedday, {userId=${userId}, date=${date}}`\n      .then (result => {\n        console.log (date);\n        console.log (\n          'LOGGING RESULT from reminders/selecctedday/USERID/DATE ',\n          result.data\n        );\n      })\n      .catch (err => {\n        console.log (err);\n      });\n  };\n\n  render () {\n    return (\n      <MyContext.Provider\n        value={{\n          state: this.state,\n          handleLogin: response => {\n            this.handleLogin (response);\n          },\n          handleLogout: () => {\n            this.handleLogout ();\n          },\n          checkUser: () => {\n            this.checkUser ();\n          },\n          addUserIdToState: () => {\n            this.addUserIdToState ();\n          },\n          selectedDayContext: this.selectedDayContext,\n          remindersPerDay: this.remindersPerDay,\n          updatePremiumState: this.updatePremiumState,\n        }}\n      >\n        {/* </MyContext.Provider>/<MyContext.Provider value={{ state: this.state, updateReturnMessage: this.updateReturnMessage }}> */}\n        {/* https://stackoverflow.com/questions/50502664/how-to-update-the-context-value-in-provider-from-the-consumer */}\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport {MyProvider, MyContext};\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport axios from 'axios';\n\nclass NewReminder extends Component {\n  state = {};\n\n  // componentDidUpdate (prevProps, prevState) {\n  //   if (this.context.state.premium !== prevState.premium) {\n  //     // Whatever storage mechanism you end up deciding to use.\n  //     localStorage.getItem ('premium');\n  //   }\n  // }\n\n  componentDidMount () {\n    // const premium = this.context.state.premium\n    //   ? this.context.state.premium\n    //   : localStorage.getItem ('premium');\n\n    console.log (this.context);\n    console.log ('logging PREMIUM newreminder', this.context.state.premium);\n  }\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n  };\n\n  handleFormSubmit = e => {\n    console.log (this.context);\n\n    //adding userId to the state obj\n    const reminder = Object.assign ({}, this.state, {\n      userId: this.context.state.userId,\n    });\n\n    e.preventDefault ();\n    axios\n      .post ('/reminders/create', reminder)\n      .then (response => {\n        console.log (reminder);\n        console.log ('response from reminder response', response);\n        //https://www.lullabot.com/articles/processing-forms-in-react\n        // ütle, et message is sent && refresh the page\n        //{message: reminder saved!}\n        //this.context. ();\n        this.props.history.push ('/');\n      })\n      .catch (err => {\n        console.log (err);\n      });\n  };\n\n  // ADD: validateInput faction onChange handler for my form\n  // https://goshakkk.name/submit-time-validation-react/\n\n  render () {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <div className=\"pd-top\">\n              <h1>{context.state.userId}</h1>\n              <h2>{this.state.userId}</h2>\n\n              <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n              <h1>New Reminder</h1>\n            </div>\n\n            <div>\n              <form onSubmit={this.handleFormSubmit}>\n\n                <div className=\"form-group row\">\n                  <label htmlFor=\"date\" className=\"col-sm-2 col-form-label\">\n                    Date and time\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"datetime-local\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      id=\"date\"\n                      placeholder=\"Date\"\n                      onChange={e => this.handleEntry (e)}\n                    />\n                  </div>\n                </div>\n                {/* Time field alone is not needed */}\n                {/* <div className=\"form-group row\">\n                  <label htmlFor=\"time\" className=\"col-sm-2 col-form-label\">\n                    Time\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      className=\"form-control\"\n                      id=\"time\"\n                      placeholder=\"10:00\"\n                      onChange={e => this.handleEntry (e)}\n                    />\n                  </div>\n                </div> */}\n\n                {/* Remind me  */}\n                <div className=\"form-group row\">\n                  <label htmlFor=\"remindme\" className=\"col-sm-2 col-form-label\">\n                    Remind me :\n                  </label>\n                  <div\n                    className=\"col-sm-10\"\n                    onChange={e => this.handleEntry (e)}\n                  >\n                    <select\n                      name=\"remindMe\"\n                      className=\"form-control\"\n                      id=\"remindme\"\n                    >\n                      <option value=\"\">\n                        Please choose reminder alert time:\n                      </option>\n                      <option value=\"6h\">6 hours before</option>\n                      <option value=\"3h\">3 hours before</option>\n                      <option value=\"1h\">1 hour before</option>\n                      <option value=\"25min\">25 minutes before</option>\n                      <option value=\"0min\">At time of event</option>\n                      <option value=\"none\">Without reminder</option>\n                    </select>\n                  </div>\n                </div>\n                {/* Text field */}\n                <div className=\"form-group row\">\n                  <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">\n                    Reminder:\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      type=\"text\"\n                      name=\"text\"\n                      className=\"form-control\"\n                      id=\"text\"\n                      placeholder=\"Enter your reminder here\"\n                      onChange={e => this.handleEntry (e)}\n                    />\n                  </div>\n                </div>\n                {/* Radios */}\n                <fieldset\n                  className=\"form-group\"\n                  onChange={e => this.handleEntry (e)}\n                >\n                  <div className=\"row\">\n                    <legend className=\"col-form-label col-sm-2 pt-0\">\n                      Radios\n                    </legend>\n                    <div className=\"col-sm-10\">\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"gridRadios\"\n                          id=\"gridRadios1\"\n                          value=\"email\"\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"gridRadios1\"\n                        >\n                          EMAIL reminder notification\n                        </label>\n                      </div>\n                      {context.state.premium === 'Yes'\n                        ? <div className=\"form-check\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"radio\"\n                              name=\"gridRadios\"\n                              id=\"gridRadios2\"\n                              value=\"sms\"\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              htmlFor=\"gridRadios2\"\n                            >\n                              SMS reminder notification\n                            </label>\n                          </div>\n                        : ''}\n                    </div>\n                  </div>\n                </fieldset>\n                <div className=\"form-group row\">\n                  <div className=\"col-sm-10\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\n\nNewReminder.contextType = MyContext;\n\nexport default NewReminder;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport {Link} from 'react-router-dom';\n//A function that returns a IETF language tag, based on all available sources.\nimport getUserLocale from 'get-user-locale';\nimport './Calendar.css';\n\nimport DayPicker from 'react-day-picker';\nimport Helmet from 'react-helmet';\n\nimport 'react-day-picker/lib/style.css';\n\nclass Calendar extends Component {\n  state = {\n    selectedDay: undefined,\n    today: new Date (),\n  };\n\n  onDayClick = (day, {selected}) => {\n    let selectedDayForContext;\n    if (selected) {\n      // Unselect the day if already selected\n      this.setState ({selectedDay: undefined});\n\n      //run a method of MyContext to update the setstate in context\n      this.context.selectedDayContext (undefined);\n      return;\n    }\n    this.setState ({selectedDay: day});\n    // show selected day in context state:\n    this.context.selectedDayContext (day);\n  };\n\n  modifier = () => {\n    const allDaysHighlighted = this.props.reminders.map (\n      reminder => new Date (reminder.date)\n    );\n    return {\n      highlighted: allDaysHighlighted,\n    };\n  };\n\n  render () {\n    const locale = getUserLocale ();\n\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <div className=\"body\">\n              <h1>Calendar</h1>\n              <Helmet>\n                <style>{`\n          .DayPicker-Day--birthday {\n            background-color: #399fff;\n            color: white;\n          }\n          .DayPicker-Day--highlighted {\n            color: #399fff;\n            // #00bcd4;\n          }\n          `}</style>\n              </Helmet>\n\n              <DayPicker\n                showOutsideDays\n                showWeekNumbers\n                todayButton=\"Go to Today\"\n                onDayClick={this.onDayClick}\n                selectedDays={this.state.selectedDay}\n                firstDayOfWeek={1}\n                //for selected days:\n                modifiers={this.modifier ()}\n              />\n              {this.state.selectedDay\n                ? <p>\n                    Selected day: {this.state.selectedDay.toLocaleDateString ()}\n                  </p>\n                : <p>Choose a day</p>}\n              <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n            </div>\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nCalendar.contextType = MyContext;\n\nexport default Calendar;\n","export function convertDateToString (date) {\n  const newDate = new Date (date);\n  const year = newDate.getFullYear ();\n  const m = newDate.getMonth () + 1;\n  const d = newDate.getUTCDate ();\n  const month = ('0' + m).slice (-2);\n  const day = ('0' + d).slice (-2);\n  return `${year}-${month}-${day}`;\n}\n","import _ from 'lodash';\n\nexport function paginate (items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n\n  // 1) convert items array to _ wrapper(method from lowdash), 2)start slice from strtIndex _.slice (items, startIndex);\n  // 3)chain with take;4) convert _ wrapper into regular array\n\n  return _ (items).slice (startIndex).take (pageSize).value ();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n  const {pageSize, itemsCount, currentPage, onPageChange} = props;\n  console.log (currentPage);\n\n  //.ceil method rounds up to integer (from floating point):\n  const pagesCount = Math.ceil (itemsCount / pageSize);\n\n  // show a range of pages with underschore.range methode(from, to)\n  const pages = _.range (1, pagesCount + 1);\n\n  // if only 1 page, dont render pagination: // edge case\n  if (pagesCount === 1) return null;\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map (page => (\n          <li\n            key={page}\n            className={page === currentPage ? 'page-item active' : 'page-item '}\n          >\n            <a onClick={() => onPageChange (page)} className=\"page-link\">\n              {page}\n            </a>\n          </li>\n        ))}\n\n      </ul>\n    </nav>\n  );\n};\n// to avoid bugs in input of pagination\nPagination.propTypes = {\n  pageSize: PropTypes.number.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","export function convertDateToDateAndTime (date) {\n  const newDate = new Date (date);\n  const year = newDate.getFullYear ();\n  const m = newDate.getMonth () + 1;\n  const d = newDate.getUTCDate ();\n  const month = ('0' + m).slice (-2);\n  const day = ('0' + d).slice (-2);\n  const h = newDate.getHours ();\n  const hour = ('0' + h).slice (-2);\n  const min = newDate.getMinutes ();\n  const minutes = ('0' + min).slice (-2);\n  return ` ${hour}:${minutes} ${day}-${month}-${year} `;\n}\n","import React from 'react';\nimport {convertDateToString} from '../utils/convertDateToString';\nimport {convertDateToDateAndTime} from '../utils/convertDateToDateAndTime';\nimport {paginate} from '../utils/paginate';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\nimport {faEdit} from '@fortawesome/free-solid-svg-icons';\nimport {Link} from 'react-router-dom';\n\nconst RemindersTable = props => {\n  const {reminders: allReminders, handleDelete, currentPage, pageSize} = props;\n\n  let remindersR = paginate (allReminders, currentPage, pageSize);\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Time</th>\n          <th>Remind me at</th>\n          <th>Text</th>\n          <th>email/sms</th>\n          <th />\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {remindersR.map ((reminder, index) => {\n          return (\n            <tr key={reminder._id}>\n              <td>\n                {convertDateToDateAndTime (reminder.date)}\n              </td>\n              <td> {reminder.remindMe}</td>\n              <td> {reminder.text}</td>\n              <td> {reminder.gridRadios}</td>\n              <td>\n                <FontAwesomeIcon\n                  icon={faTrash}\n                  onClick={() => handleDelete (reminder._id)}\n                />\n              </td>\n              <td>\n                <Link\n                  to={{\n                    pathname: '/remindersedit',\n                    state: {\n                      fromNotifications: true,\n                      id: `${reminder._id}`,\n                      date: `${reminder.date}`,\n                      remindMe: `${reminder.remindMe}`,\n                      text: `${reminder.text}`,\n                      gridRadios: `${reminder.gridRadios}`,\n                    },\n                  }}\n                  // to={`/remindersedit?id=${reminder._id}&remindMe=${reminder.remindMe}&text=${reminder.text}&gridRadios=${reminder.gridRadios}`}\n                  // reminders={this.props.reminders}\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default RemindersTable;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {MyContext} from './ReactContext';\nimport {convertDateToString} from '../utils/convertDateToString';\nimport {paginate} from '../utils/paginate';\nimport Pagination from '../common/pagination';\nimport RemindersTable from './RemindersTable';\nimport './Reminders.css';\n\nclass Reminders extends Component {\n  state = {\n    selectedDay: '',\n    reminders: [],\n    pageSize: 5,\n    currentPage: 1,\n  };\n\n  // for pagination:\n  onPageChange = page => {\n    this.setState ({currentPage: page});\n  };\n\n  // filteredFromTodayReminders = reminders => {\n  //   const filteredReminders = reminders.filter (reminder => {\n  //     let rDate = new Date (reminder.date);\n  //     let now = new Date ();\n  //     console.log (rDate > now);\n  //     return rDate > now;\n  //   });\n  //   console.log ('reminders after filter: ', filteredReminders);\n  //   return filteredReminders;\n  // };\n\n  renderReminderComponent = () => {\n    const {pageSize, currentPage} = this.state;\n    const {reminders: allReminders} = this.props;\n    let reminders = allReminders;\n    // let reminders = paginate (allReminders, currentPage, pageSize);\n    // let reminders = this.props.reminders;\n\n    let remindersConverted = reminders.map (reminder => {\n      return convertDateToString (reminder.date);\n      console.log (remindersConverted);\n    });\n\n    // Display here only reminders > new Date()\n    //make a separate function and place the fuction call here.\n\n    reminders = reminders.filter (reminder => {\n      let rDate = new Date (reminder.date);\n      let now = new Date ();\n      return rDate > now;\n    });\n    // this.filteredFromTodayReminders (reminders);\n\n    const selectedDay = this.context.state.selectedDay;\n\n    const showReminder = !selectedDay\n      ? reminders\n      : this.props.reminders.filter (\n          reminder =>\n            convertDateToString (reminder.date) ===\n            convertDateToString (selectedDay)\n        );\n\n    // this.props.reminders.filter(reminder => convertDateToString(reminder.date) === convertDateToString(selectedDay));\n    return (\n      <RemindersTable\n        reminders={showReminder}\n        handleDelete={this.props.handleDelete}\n        // allReminders={this.state.reminders}\n        currentPage={this.state.currentPage}\n        pageSize={this.state.pageSize}\n      />\n    );\n  };\n\n  render () {\n    const {pageSize, currentPage} = this.state;\n    // const {reminders: allReminders} = this.props;\n\n    if (this.props.reminders.length === 0)\n      return <p>There are no reminders in the database.</p>;\n\n    // const reminders = paginate (allReminders, currentPage, pageSize);\n\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <h2>Reminders </h2>\n            <br />\n            {this.context.state.premium === 'Yes'\n              ? ''\n              : <Link to=\"/upgrade\">Ugrade to activate SMS reminders!</Link>}\n\n            {/* {!context.state.selectedDay &&\n              <RemindersTable\n                reminders={reminders}\n                handleDelete={this.handleDelete}\n              />} */}\n\n            {this.renderReminderComponent ()}\n\n            <Pagination\n              itemsCount={this.props.reminders.length}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.onPageChange}\n            />\n\n            {/* <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n            <p>{context.state.userId}</p> */}\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\n\nReminders.contextType = MyContext;\n\nexport default Reminders;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {convertDateToDateAndTime} from '../utils/convertDateToDateAndTime';\n\nclass RemindersEdit extends Component {\n  state = {\n    _id: this.props.location.state.id,\n    date: this.props.location.state.date,\n    remindMe: this.props.location.state.remindMe,\n    text: this.props.location.state.text,\n    gridRadios: this.props.location.state.gridRadios,\n    userId: this.context.state.userId,\n    radioState: false,\n  };\n\n  componentDidMount () {\n    // lisa premiumi olemasolemise rida\n    const premium = this.context.state.premium\n      ? this.context.state.premium\n      : localStorage.getItem ('premium');\n  }\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault ();\n    let id = this.props.location.state.id;\n    axios\n      .post (\n        `/reminders/remindersedit`,\n        this.state\n        // {\n        //   withCredentials: true,\n        // }\n      )\n      .then (response => {\n        console.log ('This comes back from remindersedit:', response.data);\n        //update context state:\n        // this.context.handleLogin (response);\n\n        this.props.history.push ('/');\n      })\n      .catch (err => {\n        this.setState ({error: err.response.message});\n        console.log (err);\n      });\n  };\n\n  render () {\n    // const userId = this.context.state.userId;\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n\n            {/* FORM */}\n            <div className=\"pd-top\">\n              <h1>Edit Your Reminder</h1>\n            </div>\n            <div>\n              <form onSubmit={this.handleFormSubmit}>\n\n                <div className=\"form-group row\">\n                  <label htmlFor=\"date\" className=\"col-sm-2 col-form-label\">\n                    Date and time\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <p>\n                      {convertDateToDateAndTime (this.state.date)}\n                    </p>\n                    <input\n                      // defaultValue={this.state.date}\n                      type=\"datetime-local\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      id=\"date\"\n                      placeholder={convertDateToDateAndTime (this.state.date)}\n                      onChange={e => this.handleEntry (e)}\n                    />\n                  </div>\n                </div>\n\n                {/* Remind me  */}\n                <div className=\"form-group row\">\n                  <label htmlFor=\"remindme\" className=\"col-sm-2 col-form-label\">\n                    Remind me :\n                  </label>\n                  <div\n                    className=\"col-sm-10\"\n                    onChange={e => this.handleEntry (e)}\n                  >\n                    <p>\n                      {this.state.remindMe}\n                    </p>\n                    <select\n                      name=\"remindMe\"\n                      className=\"form-control\"\n                      id=\"remindme\"\n                    >\n                      <option defaultValue={this.state.date}>\n                        Please choose new reminder alert time:\n                      </option>\n                      <option value=\"6h\">6 hours before</option>\n                      <option value=\"3h\">3 hours before</option>\n                      <option value=\"1h\">1 hour before</option>\n                      <option value=\"25min\">25 minutes before</option>\n                      <option value=\"0min\">At time of event</option>\n                      <option value=\"none\">Without reminder</option>\n                    </select>\n                  </div>\n                </div>\n\n                {/* Text field */}\n                <div className=\"form-group row\">\n                  <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">\n                    Reminder:\n                  </label>\n                  <div className=\"col-sm-10\">\n                    <input\n                      defaultValue={this.state.text}\n                      type=\"text\"\n                      name=\"text\"\n                      className=\"form-control\"\n                      id=\"text\"\n                      placeholder=\"Enter your reminder here\"\n                      onChange={e => this.handleEntry (e)}\n                    />\n                  </div>\n                </div>\n\n                {/* Radios */}\n                <fieldset\n                  className=\"form-group\"\n                  onChange={e => this.handleEntry (e)}\n                >\n                  <div className=\"row\">\n                    <legend className=\"col-form-label col-sm-2 pt-0\">\n                      Radios\n                    </legend>\n                    <div className=\"col-sm-10\">\n                      <div className=\"form-check\">\n                        <p />\n                        <br />\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"gridRadios\"\n                          id=\"gridRadios1\"\n                          value=\"email\"\n                          defaultChecked={this.state.gridRadios === 'email'}\n                        />\n                        <label\n                          className=\"form-check-label\"\n                          htmlFor=\"gridRadios1\"\n                        >\n                          EMAIL reminder notification\n                        </label>\n                      </div>\n                      {context.state.premium === 'Yes' &&\n                        <div className=\"form-check\">\n                          <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"gridRadios\"\n                            id=\"gridRadios2\"\n                            value=\"sms\"\n                            defaultChecked={this.state.gridRadios === 'sms'}\n                          />\n                          <label\n                            className=\"form-check-label\"\n                            htmlFor=\"gridRadios2\"\n                          >\n                            SMS reminder notification\n                          </label>\n                        </div>}\n\n                    </div>\n                  </div>\n                </fieldset>\n                <div className=\"form-group row\">\n                  <div className=\"col-sm-10\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Submit EDIT\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n\n            <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nRemindersEdit.contextType = MyContext;\n\nexport default RemindersEdit;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {MyContext} from './ReactContext';\nimport Calendar from './Calendar';\nimport Reminders from './Reminders';\nimport './ReminderTool.css';\nimport RemindersEdit from './RemindersEdit';\n\nclass ReminderTool extends Component {\n  state = {\n    reminders: [],\n  };\n\n  componentDidMount () {\n    // async lisasin ise, pole kindel kumb lahendus triki teeb, kuid reminderitega probleemi pole\n    // see on Gijs'i lisatud rida, et ei renderdaks enne lehte kui remindereide loeb:\n    const userId = this.context.state.userId\n      ? this.context.state.userId\n      : localStorage.getItem ('userId');\n    axios\n      .get (`/reminders/get?id=${userId}`)\n      .then (result => {\n        console.log ('LOGGING GET from reminders/Get ', result.data);\n        this.setState ({reminders: result.data});\n      })\n      .catch (err => {\n        console.log (err);\n      });\n  }\n\n  handleDelete = reminder => {\n    axios\n      .get (`/reminders/delete?id=${reminder}`)\n      .then (result => {\n        console.log ('Deleted:', result.data.message);\n        this.setState ({});\n        this.props.history.push ('/');\n      })\n      .catch (err => {\n        console.log (err);\n      });\n\n    const prevReminders = this.state.reminders;\n    let newReminders = prevReminders.filter (item => {\n      return item._id !== reminder;\n    });\n\n    this.setState ({reminders: newReminders});\n  };\n\n  // HANDLE EDIT REMINDER\n\n  // handleDelete = reminder => {\n  //   axios\n  //     .get (`/reminders/remindersedit?id=${reminder}`)\n  //     //pean miskit kaasa andma nagu Edit user in profile\n\n  //     .then (result => {\n  //       console.log ('EDITED:', result.data.message);\n  //       this.setState ({});\n  //       this.props.history.push ('/');\n  //     })\n  //     .catch (err => {\n  //       console.log (err);\n  //     });\n\n  //   const prevReminders = this.state.reminders;\n  //   let newReminders = prevReminders.filter (item => {\n  //     return item._id !== reminder;\n  //   });\n\n  //   this.setState ({reminders: newReminders});\n  // };\n\n  render () {\n    return (\n      <div className=\"remindertool pd-top-main\">\n        <Calendar reminders={this.state.reminders} />\n        <Reminders\n          reminders={this.state.reminders}\n          handleDelete={this.handleDelete}\n        />\n        {/* <RemindersEdit reminders={this.state.reminders} /> */}\n\n      </div>\n    );\n  }\n}\nReminderTool.contextType = MyContext;\n\nexport default ReminderTool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass PaypalButton extends React.Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      showButton: false,\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentDidMount () {\n    // from scriptLoader\n    const {isScriptLoaded, isScriptLoadSucceed} = this.props;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState ({showButton: true});\n    }\n  }\n\n  //In most cases the script isn’t loaded in the componentDidMount() lifecycle method.\n  //This lifecycle method runs only once when the component is instantiated and it’s\n  // not 100% certain to have the script loaded at this point in time. Therefore:\n  componentWillReceiveProps (nextProps) {\n    const {isScriptLoaded, isScriptLoadSucceed} = nextProps;\n\n    const isLoadedButWasntLoadedBefore =\n      !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState ({showButton: true});\n      }\n    }\n  }\n\n  render () {\n    const paypal = window.PAYPAL;\n    const {\n      total,\n      currency,\n      env,\n      commit,\n      client,\n      onSuccess,\n      onError,\n      onCancel,\n    } = this.props;\n\n    const {showButton} = this.state;\n\n    const payment = () =>\n      paypal.rest.payment.create (env, client, {\n        transactions: [\n          {\n            amount: {\n              total,\n              currency,\n            },\n          },\n        ],\n      });\n\n    const onAuthorize = (data, actions) =>\n      actions.payment.execute ().then (() => {\n        const payment = {\n          paid: true,\n          cancelled: false,\n          payerID: data.payerID,\n          paymentID: data.paymentID,\n          paymentToken: data.paymentToken,\n          returnUrl: data.returnUrl,\n        };\n\n        onSuccess (payment);\n      });\n\n    return (\n      <div>\n        {showButton &&\n          <paypal.Button.react\n            env={env}\n            client={client}\n            commit={commit}\n            payment={payment}\n            onAuthorize={onAuthorize}\n            onCancel={onCancel}\n            onError={onError}\n          />}\n      </div>\n    );\n  }\n}\n\nexport default scriptLoader ('https://www.paypalobjects.com/api/checkout.js') (\n  PaypalButton\n);\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {MyContext} from './ReactContext';\nimport PaypalButton from './PaypalButton';\n\nclass Upgrade extends Component {\n  state = {};\n\n  componentDidMount () {\n    console.log ('logging premium UPGRADE', this.context.state.premium);\n  }\n\n  onUpgrade = () => {\n    const id = this.context.state.userId;\n\n    axios\n      .get (`/manage/upgrade?id=${id}`)\n      .then (result => {\n        console.log ('logging premium UPGRADE', this.context.state.premium);\n\n        console.log ('LOGGING GET from manage/upgrade ', result.data);\n        //the method to update state in context:\n        this.context.updatePremiumState ();\n      })\n      .catch (err => {\n        console.log (err);\n      });\n  };\n\n  render () {\n    const premium = this.context.state.premium\n      ? this.context.state.premium\n      : localStorage.getItem ('premium');\n    console.log ('premium in render()', this.context.state.premium);\n    return (\n      <React.Fragment>\n        <div className=\"pd-top\">\n\n          {premium === 'Yes'\n            ? <p>You have activated SMS Notification for monthly fee</p>\n            : <React.Fragment>\n                <h1>Upgrade to SMS-Reminder!</h1>\n                <p>\n                  To be able to receive notifications via sms, upgrade to PREMIUM:\n                  <br />\n\n                  <span>\n                    * unlimited sms notifications for 25€ subscription\n                  </span>\n\n                </p>\n                <br />\n                <button\n                  onClick={this.onUpgrade}\n                  type=\"button\"\n                  className=\"btn btn-lg btn-primary\"\n                >\n                  Upgrade my account\n                </button>\n              </React.Fragment>}\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nUpgrade.contextType = MyContext;\n\nexport default Upgrade;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport Pagination from '../common/pagination';\nimport {paginate} from '../utils/paginate';\nimport {MyContext} from './ReactContext';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\nimport {faEdit} from '@fortawesome/free-solid-svg-icons';\n\nclass Manage extends Component {\n  state = {\n    users: [],\n    pageSize: 3,\n    currentPage: 1,\n  };\n\n  onPageChange = page => {\n    this.setState ({currentPage: page});\n  };\n\n  componentDidMount () {\n    console.log ('logging premium MANAGE', this.context.state.premium);\n\n    axios.get ('/manage').then (result => {\n      console.log ('showing the results from manage: ', result.data);\n      this.setState ({users: result.data});\n    });\n  }\n\n  handleDeleteUser = user => {\n    axios\n      .get (`/users/delete?id=${user}`)\n      .then (result => {\n        console.log ('Deleted:', result.data.message);\n        this.setState ({});\n        this.props.history.push ('/manage');\n      })\n      .catch (err => {\n        console.log (err);\n      });\n\n    const prevUsers = this.state.users;\n    let newUsers = prevUsers.filter (item => {\n      return item._id !== user;\n    });\n\n    this.setState ({users: newUsers});\n  };\n\n  render () {\n    const {pageSize, currentPage, users: allUsers} = this.state;\n    const users = paginate (allUsers, currentPage, pageSize);\n\n    let nrOfUsers = this.state.users.length;\n    if (nrOfUsers === 0) return <p>There are no users in the database.</p>;\n    return (\n      <React.Fragment>\n        <div className=\"container pd-top\">\n          <h1>Admin tab</h1>\n          <p>The number of users in the system: {nrOfUsers}</p>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>user name </th>\n                <th>userId</th>\n                <th>email address</th>\n                <th>phone</th>\n                <th>type of user</th>\n                <th>Premium</th>\n\n                <th />\n                <th />\n\n              </tr>\n            </thead>\n            <tbody>\n\n              {users.map ((user, index) => {\n                return (\n                  <tr key={user._id}>\n                    <td>{user.first_name} </td>\n                    <td>{user._id} </td>\n                    <td>{user.email_address} </td>\n                    <td>{user.phone_number} </td>\n                    <td>{user.typeOfUser}</td>\n\n                    <td>\n                      {user.premium === 'Yes'\n                        ? <p>\n                            Yes\n                          </p>\n                        : <p>\n                            No\n                          </p>}\n                    </td>\n                    <td>\n                      <FontAwesomeIcon\n                        icon={faTrash}\n                        onClick={() => this.handleDeleteUser (user._id)}\n                      />\n                    </td>\n                    <td>\n                      <Link\n                        to={{\n                          pathname: '/manageedit',\n                          state: {\n                            userId: `${user._id}`,\n                            first_name: `${user.first_name}`,\n\n                            email_address: `${user.email_address}`,\n                            phone_number: `${user.phone_number}`,\n                            typeOfUser: `${user.typeOfUser}`,\n                            premium: `${user.premium}`,\n                          },\n                        }}\n                      >\n                        <FontAwesomeIcon icon={faEdit} />\n\n                      </Link>\n\n                    </td>\n\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          <Pagination\n            itemsCount={this.state.users.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.onPageChange}\n          />\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\nManage.contextType = MyContext;\n\nexport default Manage;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport {NavLink, Link} from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends Component {\n  state = {};\n\n  componentDidMount () {\n    // this.context.checkUser ();\n  }\n\n  render () {\n    const userId = this.context.state.userId\n      ? this.context.state.userId\n      : localStorage.getItem ('userId');\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <nav className=\"navbar navbar-expand-lg fixed-top navbar-light bg-light\">\n              <Link className=\"navbar-brand\" to=\"/\">REMINDER TOOL</Link>\n              <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n\n                  {!context.state.theUser\n                    ? <React.Fragment>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link \" to=\"/signup\">\n                            Sign up\n                          </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link \" to=\"/login\">\n                            Login\n                          </NavLink>\n                        </li>\n                      </React.Fragment>\n                    : <React.Fragment>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link\" to=\"/profile\">\n                            {context.state.theUser}\n                          </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link\" to=\"/newreminder\">\n                            New Reminder\n                          </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link\" to=\"/upgrade\">\n                            Upgrade\n                          </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link\" to=\"/logout\">\n                            Logout\n                          </NavLink>\n                        </li>\n                      </React.Fragment>}\n\n                  {context.state.typeOfUser === 'ADMIN'\n                    ? <React.Fragment>\n                        <li className=\"nav-item\">\n                          <NavLink className=\"nav-link\" to=\"/manage\">\n                            Manage\n                          </NavLink>\n                        </li>\n                      </React.Fragment>\n                    : ''}\n                </ul>\n                {context.state.theUser\n                  ? <span className=\"navbar-text\">\n                      Hello,\n                      {' '}\n                      <span className=\"username\">{context.state.theUser}</span>\n                    </span>\n                  : ''}\n              </div>\n            </nav>\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\n\nNav.contextType = MyContext;\n\nexport default Nav;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faUser,\n  faBuilding,\n  faPhone,\n  faEnvelope,\n  faLock,\n} from '@fortawesome/free-solid-svg-icons';\nimport '@fortawesome/free-solid-svg-icons';\n// import './Signup.css';\n\nclass Signup extends Component {\n  state = {\n    first_name: '',\n    email_address: '',\n    phone_number: '',\n    premium: '',\n    password: '',\n    error: '',\n  };\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n  };\n\n  handleFormSubmit = e => {\n    //console.log ('console.logging the state ', this.state);\n    e.preventDefault ();\n    axios\n      .post ('/auth/signup', this.state)\n      .then (response => {\n        console.log ('This comes back from auth/create:', response);\n        //https://www.lullabot.com/articles/processing-forms-in-react\n        // ütle, et message is sent && refresh the page\n        this.props.history.push ('/login');\n      })\n      .catch (err => {\n        this.setState ({error: err.response.data.message});\n        console.log (err.response.data);\n      });\n  };\n\n  render () {\n    return (\n      <React.Fragment>\n        <div class=\"container\">\n          <br />\n          <hr />\n\n          <div class=\"card bg-light\">\n            <article class=\"card-body mx-auto\" style={{'max-width': '400px'}}>\n              <h4 class=\"card-title mt-3 text-center\">Create Account</h4>\n              <p class=\"text-center\">Get started with your free account</p>\n              <p>\n                {/* <Link to=\"\" class=\"btn btn-block btn-twitter\"> */}\n                {/* <i class=\"fab fa-twitter\" /> Login via Twitter */}\n                {/* </Link> */}\n                {/* <a to=\"\" class=\"btn btn-block btn-facebook\">\n                    {' '}\n                    <i class=\"fab fa-facebook-f\" /> Login via facebook\n                  </a> */}\n              </p>\n              {/* <p class=\"divider-text\">\n                <span class=\"bg-light\">OR</span>\n              </p> */}\n              <form onSubmit={this.handleFormSubmit}>\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faUser} />\n                    </span>\n                  </div>\n                  <input\n                    name=\"first_name\"\n                    class=\"form-control\"\n                    placeholder=\"First name\"\n                    type=\"text\"\n                    onChange={e => this.handleEntry (e)}\n                  />\n                </div>\n                {/* <!-- form-group// --> */}\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faEnvelope} />\n                    </span>\n                  </div>\n                  <input\n                    name=\"email_address\"\n                    class=\"form-control\"\n                    placeholder=\"Email address\"\n                    type=\"email\"\n                    onChange={e => this.handleEntry (e)}\n                  />\n                </div>\n                {/* <!-- form-group// --> */}\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faPhone} />\n                    </span>\n                  </div>\n                  <select class=\"custom-select\" style={{'max-width': '120px'}}>\n                    <option selected=\"\">+31</option>\n                    <option value=\"1\">+972</option>\n                    <option value=\"2\">+198</option>\n                    <option value=\"3\">+701</option>\n                  </select>\n                  <input\n                    name=\"phone_number\"\n                    class=\"form-control\"\n                    placeholder=\"Phone number\"\n                    type=\"text\"\n                    onChange={e => this.handleEntry (e)}\n                  />\n                </div>\n\n                {/* <!-- form-group// --> */}\n                {/* <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faBuilding} />\n                      <i class=\"fa fa-building\" />{' '}\n                    </span>\n                  </div>\n                  <select\n                    name=\"premium\"\n                    class=\"form-control\"\n                    onChange={e => this.handleEntry (e)}\n                  >\n                    <option value=\"?\" selected=\"\"> Select Premium</option>\n                    <option value=\"Yes\">Yes</option>\n                    <option value=\"No\">No</option>\n                  </select>\n                </div> */}\n\n                {/* <!-- form-group end.// -->  */}\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faLock} />\n                    </span>\n                  </div>\n                  <input\n                    name=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"Create password\"\n                    type=\"password\"\n                    onChange={e => this.handleEntry (e)}\n                  />\n                </div>\n                {/* <!-- form-group// --> */}\n                <div class=\"form-group input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                      <FontAwesomeIcon icon={faLock} />\n                    </span>\n                  </div>\n                  <input\n                    name=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"Repeat password\"\n                    type=\"password\"\n                    onChange={e => this.handleEntry (e)}\n                  />\n                </div>\n                {/* ERROR messge: */}\n                <div className=\"text-danger text-uppercase\">\n                  {this.state.error ? <p>{this.state.error}</p> : ''}\n                </div>\n\n                {/* <!-- form-group// -->                                       */}\n                <div class=\"form-group\">\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                    Create Account{' '}\n                  </button>\n                </div>\n                {/* <!-- form-group// -->       */}\n                <p class=\"text-center\">\n                  Have an account? <Link to=\"\">Log In</Link>{' '}\n                </p>\n              </form>\n            </article>\n          </div>\n          {/* <!-- card.// -->  */}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default Signup;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {MyContext} from './ReactContext';\n\nclass Login extends Component {\n  state = {\n    email_address: '',\n    password: '',\n    theUser: '',\n    typeOfUser: '',\n    error: '',\n  };\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault ();\n    axios\n      .post ('/auth/login', this.state, {\n        withCredentials: true,\n      })\n      .then (response => {\n        console.log ('This comes back from auth/login:', response.data);\n\n        // handle login from  CONTEXT\n        this.context.handleLogin (response);\n        this.props.history.replace ('/');\n\n        //https://www.lullabot.com/articles/processing-forms-in-react\n      })\n      .catch (err => {\n        this.setState ({error: err.response.data.message});\n        console.log (err);\n      });\n  };\n\n  render () {\n    return (\n      <React.Fragment>\n        <div className=\"pd-top\">\n          <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n          <main className=\"login-form\">\n            <div className=\"cotainer\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">LOG IN</div>\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleFormSubmit}>\n                        <div className=\"form-group row\">\n                          <label\n                            htmlFor=\"email_address\"\n                            className=\"col-md-4 col-form-label text-md-right\"\n                          >\n                            E-Mail Address\n                          </label>\n                          <div className=\"col-md-6\">\n                            <input\n                              type=\"text\"\n                              id=\"email_address\"\n                              className=\"form-control\"\n                              name=\"email_address\"\n                              required\n                              autoFocus\n                              onChange={e => this.handleEntry (e)}\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"form-group row\">\n                          <label\n                            htmlFor=\"password\"\n                            className=\"col-md-4 col-form-label text-md-right\"\n                          >\n                            Password\n                          </label>\n                          <div className=\"col-md-6\">\n                            <input\n                              type=\"password\"\n                              id=\"password\"\n                              className=\"form-control\"\n                              name=\"password\"\n                              required\n                              onChange={e => this.handleEntry (e)}\n                            />\n                          </div>\n                        </div>\n\n                        {/* ERROR messge: */}\n                        <div className=\"text-danger text-uppercase\">\n                          {this.state.error ? <p>{this.state.error}</p> : ''}\n                        </div>\n                        <div className=\"form-group row\">\n                          <div className=\"col-md-6 offset-md-4\">\n                            <div className=\"checkbox\">\n                              <label>\n                                <input type=\"checkbox\" name=\"remember\" />\n                                {' '}\n                                Remember Me\n                              </label>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"col-md-6 offset-md-4\">\n                          <button type=\"submit\" className=\"btn btn-primary\">\n                            Log in\n                          </button>\n                          <Link to=\"#\" className=\"btn btn-link\">\n                            Don't have account yet?\n                          </Link>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </main>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nLogin.contextType = MyContext;\n\nexport default Login;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\n\nclass Logout extends Component {\n  state = {};\n\n  confirmLogout = () => {\n    this.context.handleLogout ();\n    this.props.history.replace ('/login');\n  };\n\n  render () {\n    return (\n      <div className=\"pd-top\">\n        <MyContext.Consumer>\n          {context => (\n            <React.Fragment>\n              <h3>\n                Click here to confirm log out\n              </h3>\n              <button className=\"btn btn-primary\" onClick={this.confirmLogout}>\n                {' '}Confirm Logout\n              </button>\n            </React.Fragment>\n          )}\n        </MyContext.Consumer>\n      </div>\n    );\n  }\n}\nLogout.contextType = MyContext;\n\nexport default Logout;\n","import React, {Component} from 'react';\n\nclass NotFound extends Component {\n  state = {};\n  render () {\n    return <div className=\"pd-top\"><h1>This takes you nowhere</h1></div>;\n  }\n}\n\nexport default NotFound;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {faLessThanEqual} from '@fortawesome/free-solid-svg-icons';\n\nclass Profile extends Component {\n  state = {};\n\n  componentDidMount () {\n    this.context.checkUser ();\n\n    // Make sure the Premium is there\n    const premium = this.context.state.premium\n      ? this.context.state.premium\n      : localStorage.getItem ('premium');\n\n    // make sure the userId is there\n    const userId = this.context.state.userId\n      ? this.context.state.userId\n      : localStorage.getItem ('userId');\n\n    console.log ('logging premium Profile', this.context.state.premium);\n    // const userId = this.context.state.userId;\n\n    axios\n      .get (`/reminders/statistics?userId=${userId}`)\n      .then (result => {\n        console.log ('LOGGING GET from reminders/statistics ', result.data);\n        this.setState ({reminders: result.data});\n        console.log ('logging premium', this.context.state.premium);\n      })\n      .catch (err => {\n        console.log (err);\n      });\n  }\n\n  render () {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n\n            <div className=\"pd-top\">\n              <h1> {context.state.theUser} Profile page </h1>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>My name </th>\n                    <th>My email address</th>\n                    <th>My mobile number </th>\n                    <th>SMS Reminders possible</th>\n                    <th />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr key={context.state.id}>\n\n                    <td>{context.state.first_name}</td>\n                    <td> {context.state.email_address}</td>\n                    <td>{context.state.phone_number}</td>\n                    <td>\n                      {this.context.state.premium === 'Yes'\n                        ? <p>\n                            Yes\n                          </p>\n                        : <p>\n                            No\n                            <Link to=\"/upgrade\">\n                              Ugrade to activate SMS reminders!\n                            </Link>\n                          </p>}\n                    </td>\n                    <td>\n                      <Link\n                        to=\"/profileedit\"\n                        className=\"btn btn-primary btn-sm\"\n                      >\n                        {/* {' '}// onClick={() => //this.handleDelete ()} */}\n                        Edit contact details\n                      </Link>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              {this.context.state.premium === 'No'\n                ? <Link to=\"/upgrade\">Ugrade to activate SMS reminders!</Link>\n                : ''}\n\n              <br /><br />\n              {/* STATISTICS */}\n              <h2> Statistics</h2>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Reminders Total</th>\n                    <th>of them Email reminders </th>\n                    <th>of then SMS reminders </th>\n                    <th />\n                    <th />\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr key={context.state.id}>\n\n                    <td>{this.state.reminders}</td>\n                    <td> 5</td>\n                    <td>4</td>\n                    <td />\n                    <td />\n                  </tr>\n                </tbody>\n              </table>\n\n            </div>\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nProfile.contextType = MyContext;\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass ProfileEdit extends Component {\n  state = {\n    _id: this.context.state.userId,\n    first_name: this.context.state.first_name,\n    email_address: this.context.state.email_address,\n    phone_number: this.context.state.phone_number,\n  };\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n    // defaultValue ?\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault ();\n    let _id = this.context.state.userId;\n    axios\n      .post (\n        `/users/profileedit`,\n        this.state\n        // {\n        //   withCredentials: true,\n        // }\n      )\n      .then (response => {\n        console.log ('This comes back from profileedit:', response.data);\n        //update context state:\n        this.context.handleLogin (response);\n\n        this.props.history.push ('/profile');\n      })\n      .catch (err => {\n        this.setState ({error: err.response.message});\n        console.log (err);\n      });\n  };\n\n  render () {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n\n            {/* FORM */}\n\n            <main className=\"Edit-profile-form\">\n              <div className=\"cotainer pd-top\">\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-md-8\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">EDIT YOUR DETAILS:</div>\n                      <div className=\"card-body\">\n                        <form onSubmit={this.handleFormSubmit}>\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              My name{' '}\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={context.state.first_name}\n                                type=\"text\"\n                                id=\"first_name\"\n                                className=\"form-control\"\n                                name=\"first_name\"\n                                autoFocus\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              My email address\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={context.state.email_address}\n                                type=\"text\"\n                                id=\"email_address\"\n                                className=\"form-control\"\n                                name=\"email_address\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              My mobile number\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={context.state.phone_number}\n                                type=\"text\"\n                                id=\"phone_number\"\n                                className=\"form-control\"\n                                name=\"phone_number\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          {/* <div className=\"form-group row\">\n                            <label\n                              htmlFor=\"password\"\n                              className=\"col-md-4 col-form-label text-md-right\"\n                            >\n                              Update Password\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                type=\"password\"\n                                id=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div> */}\n\n                          {/* ERROR messge: */}\n                          <div className=\"text-danger text-uppercase\">\n                            {this.state.error ? <p>{this.state.error}</p> : ''}\n                          </div>\n\n                          <div className=\"form-group row\" />\n                          <div className=\"col-md-6 offset-md-4\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                              Update changes\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n\n            </main>\n\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nProfileEdit.contextType = MyContext;\n\nexport default ProfileEdit;\n","import React, {Component} from 'react';\nimport {MyContext} from './ReactContext';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass ManageEdit extends Component {\n  state = {\n    _id: this.props.location.state.userId,\n    first_name: this.props.location.state.first_name,\n    userId: this.props.location.state.userId,\n    email_address: this.props.location.state.email_address,\n    phone_number: this.props.location.state.phone_number,\n    typeOfUser: this.props.location.state.typeOfUser,\n    premium: this.props.location.state.premium,\n    error: '',\n  };\n\n  handleEntry = e => {\n    console.log (e.target.value);\n    let {name, value} = e.target;\n    this.setState ({[name]: value});\n    // defaultValue ?\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault ();\n    let _id = this.context.state.userId;\n    axios\n      .post (\n        `http://:6001/users/manageedit`,\n        this.state\n        // {\n        //   withCredentials: true,\n        // }\n      )\n      .then (response => {\n        console.log ('This comes back from profileedit:', response.data);\n\n        //update context state:\n        // sii vaha veidi teist update'i, mis ei muudaks kasutatavat ära kogu äpis\n        // this.context.handleLogin (response);\n\n        this.props.history.push ('/manage');\n      })\n      .catch (err => {\n        this.setState ({error: err.response.message});\n        console.log (err);\n      });\n  };\n\n  render () {\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n\n            {/* FORM */}\n\n            <main className=\"Edit-manage-form\">\n              <div className=\"cotainer pd-top\">\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-md-8\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        ADMIN EDITING TAB\n                      </div>\n                      <div className=\"card-body\">\n                        <form onSubmit={this.handleFormSubmit}>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              User name\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.first_name}\n                                type=\"text\"\n                                id=\"first_name\"\n                                className=\"form-control\"\n                                name=\"first_name\"\n                                autoFocus\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              UserId\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.userId}\n                                type=\"text\"\n                                id=\"userId\"\n                                className=\"form-control\"\n                                name=\"userId\"\n                                autoFocus\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              email address\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.email_address}\n                                type=\"text\"\n                                id=\"email_address\"\n                                className=\"form-control\"\n                                name=\"email_address\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              Mobile number\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.phone_number}\n                                type=\"text\"\n                                id=\"phone_number\"\n                                className=\"form-control\"\n                                name=\"phone_number\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              Type of user\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.typeOfUser}\n                                type=\"text\"\n                                id=\"typeOfUser\"\n                                className=\"form-control\"\n                                name=\"typeOfUser\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"form-group row\">\n                            <label className=\"col-md-4 col-form-label text-md-right\">\n                              Premium\n                            </label>\n                            <div className=\"col-md-6\">\n                              <input\n                                defaultValue={this.state.premium}\n                                type=\"text\"\n                                id=\"phone_number\"\n                                className=\"form-control\"\n                                name=\"premium\"\n                                onChange={e => this.handleEntry (e)}\n                              />\n                            </div>\n                          </div>\n\n                          {/* ERROR messge: */}\n                          <div className=\"text-danger text-uppercase\">\n                            {this.state.error ? <p>{this.state.error}</p> : ''}\n                          </div>\n\n                          <div className=\"form-group row\" />\n                          <div className=\"col-md-6 offset-md-4\">\n\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                              Update changes\n                            </button>\n                            {/* <button className=\"btn m-2 btn-danger\">\n                              onClick={() => this.handleDelete (this.state._id)}\n\n                              Delete user\n                            </button> */}\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <pre>state:{JSON.stringify (this.state, '\\t', 2)}</pre>\n\n            </main>\n\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nManageEdit.contextType = MyContext;\n\nexport default ManageEdit;\n","import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {MyContext} from '../components/ReactContext';\n\nclass ProtectedRoute extends Component {\n  state = {};\n\n  render () {\n    const {path, component: Component, render, ...rest} = this.props;\n\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <Route\n            path={path}\n            {...rest}\n            render={props => {\n              if (!context.state.theUser) return <Redirect to=\"/login\" />;\n              return Component ? <Component {...props} /> : render (props);\n            }}\n          />\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nProtectedRoute.contextType = MyContext;\n\nexport default ProtectedRoute;\n","import React, {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {MyContext} from '../components/ReactContext';\n\nclass ProtectedAdminRoute extends Component {\n  state = {};\n\n  render () {\n    const {path, component: Component, render, ...rest} = this.props;\n\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <Route\n            path={path}\n            {...rest}\n            render={props => {\n              if (context.state.typeOfUser === 'ADMIN')\n                return Component ? <Component {...props} /> : render (props);\n              return <Redirect to=\"/login\" />;\n            }}\n          />\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\nProtectedAdminRoute.contextType = MyContext;\n\nexport default ProtectedAdminRoute;\n","import React, {Component} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {MyProvider, MyContext} from './components/ReactContext';\nimport NewReminder from './components/NewReminder';\nimport ReminderTool from './components/ReminderTool';\nimport Upgrade from './components/Upgrade';\nimport Manage from './components/Manage';\nimport Nav from './components/Nav';\nimport PaypalButton from './components/PaypalButton';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport NotFound from './components/NotFound';\nimport Profile from './components/Profile';\nimport ProfileEdit from './components/ProfileEdit';\nimport RemindersEdit from './components/RemindersEdit';\nimport ManageEdit from './components/ManageEdit';\nimport ProtectedRoute from './common/ProtectedRoute';\nimport ProtectedAdminRoute from './common/ProtectedAdminRoute';\nimport './App.css';\n\nclass App extends Component {\n  state = {};\n\n  render () {\n    const {theUser, typeOfUser} = this.context.state;\n    return (\n      <MyContext.Consumer>\n        {context => (\n          <React.Fragment>\n            <Nav />\n            <main className=\"container\">\n              <Switch>\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/Login\" component={Login} />\n                <Route path=\"/logout\" component={Logout} />\n\n                {/* <Route\n                  path=\"/manage\"\n                  render={props => {\n                    if (context.state.typeOfUser === 'ADMIN')\n                      return <Redirect to=\"/\" />;\n                    return <Manage {...props} />;\n                  }}\n                />; */}\n\n                <ProtectedRoute\n                  path=\"/remindersedit\"\n                  component={RemindersEdit}\n                />\n                <ProtectedRoute path=\"/newreminder\" component={NewReminder} />;\n                <ProtectedRoute path=\"/upgrade\" component={Upgrade} />;\n                <ProtectedRoute path=\"/profileedit\" component={ProfileEdit} />;\n                <ProtectedRoute path=\"/profile\" component={Profile} />;\n\n                {/* // make PROTECTED admin routes - creates trouble */}\n                <ProtectedAdminRoute path=\"/manage\" component={Manage} />\n                <ProtectedAdminRoute\n                  path=\"/manageedit\"\n                  component={ManageEdit}\n                />\n\n                <Route exact path=\"/\" component={ReminderTool} />\n                <Route path=\"/nothinghere\" component={NotFound} />\n                <Redirect to=\"/nothinghere\" />\n\n              </Switch>\n            </main>\n          </React.Fragment>\n        )}\n      </MyContext.Consumer>\n    );\n  }\n}\n\nApp.contextType = MyContext;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {MyProvider} from './components/ReactContext';\n\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render (\n  <MyProvider>\n\n    <Router>\n      <App />\n    </Router>\n  </MyProvider>,\n  document.getElementById ('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n"],"sourceRoot":""}